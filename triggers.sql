CREATE TRIGGER before_delete_members BEFORE DELETE ON members FOR EACH ROW SIGNAL SQLSTATE '45000';
CREATE TRIGGER before_insert_members BEFORE INSERT ON members FOR EACH ROW SIGNAL SQLSTATE '45000';
CREATE TRIGGER before_update_members BEFORE UPDATE ON members FOR EACH ROW SIGNAL SQLSTATE '45000';

CREATE TRIGGER before_update_event BEFORE UPDATE ON event FOR EACH ROW SIGNAL SQLSTATE '45000';
CREATE TRIGGER before_insert_event BEFORE INSERT ON event FOR EACH ROW SIGNAL SQLSTATE '45000';
CREATE TRIGGER before_delete_event BEFORE DELETE ON event FOR EACH ROW SIGNAL SQLSTATE '45000';

CREATE TRIGGER before_insert_oversees BEFORE INSERT ON oversees FOR EACH ROW SIGNAL SQLSTATE '45000';
CREATE TRIGGER before_delete_oversees BEFORE DELETE ON oversees FOR EACH ROW SIGNAL SQLSTATE '45000';
CREATE TRIGGER before_update_oversees BEFORE UPDATE ON oversees FOR EACH ROW SIGNAL SQLSTATE '45000';

CREATE TRIGGER before_insert_staff BEFORE INSERT ON staff FOR EACH ROW SIGNAL SQLSTATE '45000';
CREATE TRIGGER before_delete_staff BEFORE DELETE ON staff FOR EACH ROW SIGNAL SQLSTATE '45000';
CREATE TRIGGER before_update_staff BEFORE UPDATE ON staff FOR EACH ROW SIGNAL SQLSTATE '45000';

CREATE TRIGGER before_insert_manager BEFORE INSERT ON manager FOR EACH ROW SIGNAL SQLSTATE '45000';
CREATE TRIGGER before_delete_manager BEFORE DELETE ON manager FOR EACH ROW SIGNAL SQLSTATE '45000';
CREATE TRIGGER before_update_manager BEFORE UPDATE ON manager FOR EACH ROW SIGNAL SQLSTATE '45000';

CREATE TRIGGER before_insert_organizes BEFORE INSERT ON organizes FOR EACH ROW SIGNAL SQLSTATE '45000';
CREATE TRIGGER before_delete_organizes BEFORE DELETE ON organizes FOR EACH ROW SIGNAL SQLSTATE '45000';
CREATE TRIGGER before_update_organizes BEFORE UPDATE ON organizes FOR EACH ROW SIGNAL SQLSTATE '45000';

CREATE TRIGGER before_insert_booking BEFORE INSERT ON booking FOR EACH ROW SIGNAL SQLSTATE '45000';
CREATE TRIGGER before_delete_booking BEFORE DELETE ON booking FOR EACH ROW SIGNAL SQLSTATE '45000';
CREATE TRIGGER before_update_booking BEFORE UPDATE ON booking FOR EACH ROW SIGNAL SQLSTATE '45000';

CREATE TRIGGER before_insert_came_in_date BEFORE INSERT ON came_in_date FOR EACH ROW SIGNAL SQLSTATE '45000';
CREATE TRIGGER before_delete_came_in_date BEFORE DELETE ON came_in_date FOR EACH ROW SIGNAL SQLSTATE '45000';
CREATE TRIGGER before_update_came_in_date BEFORE UPDATE ON came_in_date FOR EACH ROW SIGNAL SQLSTATE '45000';

CREATE TRIGGER before_insert_sign_in BEFORE INSERT ON sign_in FOR EACH ROW SIGNAL SQLSTATE '45000';
CREATE TRIGGER before_delete_sign_in BEFORE DELETE ON sign_in FOR EACH ROW SIGNAL SQLSTATE '45000';
CREATE TRIGGER before_update_sign_in BEFORE UPDATE ON sign_in FOR EACH ROW SIGNAL SQLSTATE '45000';
